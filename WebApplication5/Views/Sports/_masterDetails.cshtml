@model IEnumerable<WebApplication5.Models.ViewModel.SportsViewModel>
@using PagedList;
@using PagedList.Mvc;

<table class="table table-bordered table-striped table-sm" >
    <thead class="table-primary">
        <tr>
            <th>
                @Ajax.ActionLink("Sports Name","MasterView",new
           { sort=ViewBag.NameSort,search=ViewBag.Search },
           new AjaxOptions
           { InsertionMode=InsertionMode.Replace,
               UpdateTargetId="holder",
               HttpMethod="post",
               AllowCache=false },
           new{@clas="text-dark"})
                <i class="fa @(ViewBag.NameSort=="name"?"fa-sort-desc":"fa-sort-asc")"></i>
            </th>
            <th>@Html.DisplayNameFor(x=>x.playerCount)</th>
            <th></th>
        </tr>

    </thead>
    <tbody>
        @foreach(var item in Model)

            {
            <tr>
                <td>
                    @Html.DisplayFor(x => item.SportsName)
                </td>
                <td>
                    @Html.DisplayFor(x => item.playerCount)
                </td>
                <td>
                    <a href="#" data-pk="@item.SportsId" class="btn btn-secondary  btn-sm info "
                       title="View players"><i class="fa fa-list"></i></a>
                </td>
            </tr>
            }
    </tbody>

</table>
<div class="d-flex justify-content-end">
    @Html.PagedListPager(Model as IPagedList, page
    => Url.Action("MasterView", new { page, sort = ViewBag.CurrentShort, Search = ViewBag.Search }),
       PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(new AjaxOptions
       {
           InsertionMode = InsertionMode.Replace,
           HttpMethod = "post",
           UpdateTargetId = "holder",
           OnComplete = "OnComplete"
       }))

</div>